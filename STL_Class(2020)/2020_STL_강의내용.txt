


****************************
Wed Apr  1 17:09:17 2020
****************************


#include <iostream>
#include "save.h"

using namespace std;

//1주차 1일 강의 과제

class X {
	int val;
public:
	X() { val = 0; }
	X(int n) :val{ n } {}

	friend ostream& operator << (ostream&, const X&);
};
ostream& operator<<(ostream& os, const X& i) {
	os << i.val;
	return os;
}

void change(X&, X&);

int main() {

	save("main.cpp");

	X a{ 1 };
	X b{ 2 };

	change(a, b);

	cout << a << "," << b << endl;
}

void change(X& a, X& b) {
	X temp{ a };

	a = b;
	b = temp;
}


****************************
Wed Apr  1 17:09:57 2020
****************************


#include <iostream>
#include "save.h"

using namespace std;

//	1주 2일차
//	
//	1. 정수 1000개.txt가 가지는 하드디스크 파일의 크기
//	
//	크기 = 11, 489바이트
//	디스크 할당 크기 = 12, 288바이트
//	그 이유는 이러하다
//	txt파일은 사람이 읽을 수 있는 형태로 저장을 하게된다.
//	왜냐하면 사람이 읽을라고 만든게 txt이니까
//	int는 하나에 4byte이다 그러므로 1000개의 정수를 합하면 4000이 나와야한다.
//	하지만 엔터(\n or endl)하나에 2byte를 차지하기 때문에
//	2x1000 + 4000 = 6000byte로 나와야 한다 하지만
//	실제크기는 그보다 많이 나온다
//	이유가 무엇인가 보아하니
//	txt에 저장할때는 문자로 저장이 된다
//	그렇다면 숫자 하나당 8~10자리정도 되니까
//	char형태의 문자가 10개정도 있다는 것이다
//	그럼 엔터키 포함해서 한줄에 12바이트를 차지하게 되는데
//	
//	
//	2. 이러한 일을 어떻게 처리해야될까 라고 생각해보자
//	int는 int형으로 저장하고 char는 char형으로 저장해야하는데
//	이를 저장하기 위해서 내가 알고있는 것중에는
//	c언어 파일입출력을 배울때 바이너리모드로 저장하는 것이 생각이 났다.
//	그럼 정수 1000개를 바이너리 모드로 저장을 하게되면
//	내가 생각한 크기인 6000바이트 언저리가 나오게 될것이다
//	하지만 여기서 문제는 무엇이냐 하면
//	txt파일을 열어도 사람이 읽을 수 없는 문자로 표현이 되어있을 것이다.
//	예를들어 뚫꽗밣 % ^#$(@# % _이런식으로 문자가 깨져있을 것이다.

int main() {
	save("main.cpp");
}
